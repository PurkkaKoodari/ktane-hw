font = {
0x00:"""







""",
0x01:"""
#####
#####
#####
#####
#####
#####
#####
""",
0x02:"""
# # #
# # #
# # #
# # #
# # #
# # #
# # #
""",
0x03:"""
 # # 
 # # 
 # # 
 # # 
 # # 
 # # 
 # # 
""",
0x04:"""
#####
     
#####
     
#####
     
#####
""",
0x05:"""
     
#####
     
#####
     
#####
     
""",
" ":"""







""",
"!":"""
  #
  #
  #
  #
  #

  #
""",
'"':"""

 # #
#####
 # #
 # #
#####
 # #
""",
"$":"""
  #
 ####
# #
 ###
  # #
####
  #
""",
"%":"""
##
##  #
   #
  #
 #
#  ##
   ##
""",
"&":"""
 ##
#
# #
 #
# # #
#  #
 ## #
""",
"'":"""
  #
  #





""",
"(":"""
   #
  #
 #
 #
 #
  #
   #
""",
")":"""
 #
  #
   #
   #
   #
  #
 #
""",
"*":"""
  #
# # #
 ###
# # #
  #


""",
"+":"""

  #
  #
#####
  #
  #

""",
",":"""





  #
 #
""",
"-":"""



#####



""",
".":"""






  #
""",
"/":"""
    #
    #
   #
  #
 #
#
#
""",
"0":"""
 ###
##  #
# # #
# # #
# # #
#  ##
 ###
""",
"1":"""
  #
 ##
# #
  #
  #
  #
#####
""",
"2":"""
 ###
#   #
   #
  #
 #
#
#####
""",
"3":"""
 ###
#   #
    #
  ##
    #
#   #
 ###
""",
"4":"""
#   #
#   #
#   #
#####
    #
    #
    #
""",
"5":"""
#####
#
####
    #
    #
#   #
 ###
""",
"6":"""
 ###
#   #
#
####
#   #
#   #
 ###
""",
"7":"""
#####
    #
    #
   #
   #
  #
  #
""",
"8":"""
 ###
#   #
#   #
 ###
#   #
#   #
 ###
""",
"9":"""
 ###
#   #
#   #
 ####
    #
#   #
 ###
""",
":":"""

  #



  #

""",
";":"""

  #



  #
 #
""",
"<":"""

   ##
 ##
#
 ##
   ##

""",
"=":"""


#####

#####


""",
">":"""

##
  ##
    #
  ##
##

""",
"?":"""
 ###
#   #
    #
   #
  #

  #
""",
"@":"""
 ###
#   #
#  ##
# # #
#  ##
#
 ###
""",
"A":"""
  #
 # #
#   #
#   #
#####
#   #
#   #
""",
"B":"""
####
#   #
#   #
####
#   #
#   #
####
""",
"C":"""
 ###
#   #
#
#
#
#   #
 ###
""",
"D":"""
####
#   #
#   #
#   #
#   #
#   #
####
""",
"E":"""
#####
#
#
#####
#
#
#####
""",
"F":"""
#####
#
#
#####
#
#
#
""",
"G":"""
 ####
#
#
#  ##
#   #
#   #
 ###
""",
"H":"""
#   #
#   #
#   #
#####
#   #
#   #
#   #
""",
"I":"""
 ###
  #
  #
  #
  #
  #
 ###
""",
"J":"""
    #
    #
    #
    #
#   #
#   #
 ###
""",
"K":"""
#   #
#  #
# #
##
# #
#  #
#   #
""",
"L":"""
#
#
#
#
#
#
#####
""",
"M":"""
#   #
## ##
# # #
#   #
#   #
#   #
#   #
""",
"N":"""
#   #
##  #
# # #
#  ##
#   #
#   #
#   #
""",
"O":"""
 ###
#   #
#   #
#   #
#   #
#   #
 ###
""",
"P":"""
####
#   #
#   #
####
#
#
#
""",
"Q":"""
 ###
#   #
#   #
#   #
# # #
#  #
 ## #
""",
"R":"""
####
#   #
#   #
####
# #
#  #
#   #
""",
"S":"""
 ###
#   #
#
 ###
    #
#   #
 ###
""",
"T":"""
#####
  #
  #
  #
  #
  #
  #
""",
"U":"""
#   #
#   #
#   #
#   #
#   #
#   #
 ###
""",
"V":"""
#   #
#   #
#   #
 # #
 # #
 # #
  #
""",
"W":"""
#   #
#   #
#   #
# # #
# # #
# # #
 # #
""",
"X":"""
#   #
#   #
 # #
  #
 # #
#   #
#   #
""",
"Y":"""
#   #
#   #
 # #
  #
  #
  #
  #
""",
"Z":"""
#####
    #
   #
  #
 #
#
#####
""",
"[":"""
 ###
 #
 #
 #
 #
 #
 ###
""",
"\\":"""
#
#
 #
  #
   #
    #
    #
""",
"]":"""
 ###
   #
   #
   #
   #
   #
 ###
""",
"^":"""
  #
 # #
#   #




""",
"_":"""






#####
""",
"`":"""
 #
  #





""",
"a":"""


 ###
    #
 ####
#   #
 ####
""",
"b":"""
#
#
####
#   #
#   #
#   #
####
""",
"c":"""


 ###
#
#
#
 ###
""",
"d":"""
    #
    #
 ####
#   #
#   #
#   #
 ####
""",
"e":"""


 ###
#   #
#####
#
 ###
""",
"f":"""
  ##
 #  #
 #
###
 #
 #
 #
""",
"g":"""


 ###
#   #
 ####
    #
 ###
""",
"h":"""
#
#
####
#   #
#   #
#   #
#   #
""",
"i":"""

  #

  #
  #
  #
  #
""",
"j":"""
   #

   #
   #
   #
#  #
 ##
""",
"k":"""
#
#
#   #
#  #
###
#  #
#   #
""",
"l":"""
  #
  #
  #
  #
  #
  #
   #
""",
"m":"""


## #
# # #
# # #
# # #
# # #
""",
"n":"""


# ##
##  #
#   #
#   #
#   #
""",
"o":"""


 ###
#   #
#   #
#   #
 ###
""",
"p":"""


####
#   #
####
#
#
""",
"q":"""


 ####
#   #
 ####
    #
    #
""",
"r":"""


# ##
##  #
#
#
#
""",
"s":"""


 ####
#
 ###
    #
####
""",
"t":"""


 #
####
 #
 #
  ##
""",
"u":"""


#   #
#   #
#   #
#  ##
 ## #
""",
"v":"""


#   #
#   #
 # #
 # #
  #
""",
"w":"""


# # #
# # #
# # #
 # #
 # #
""",
"x":"""


#   #
 # #
  #
 # #
#   #
""",
"y":"""


#   #
#   #
 ####
    #
 ###
""",
"z":"""


#####
   #
  #
 #
#####
""",
"{":"""
   ##
  #
  #
 #
  #
  #
   ##
""",
"|":"""
  #
  #
  #
  #
  #
  #
  #
""",
"}":"""
##
  #
  #
   #
  #
  #
##
""",
"~":"""


 #
# # #
   #


""",
"Å":"""
  #

  #
 # #
#   #
#####
#   #
""",
"Ä":"""
#   #

  #
 # #
#   #
#####
#   #
""",
"Ö":"""
#   #

 ###
#   #
#   #
#   #
 ###
""",
"å":"""
  #

 ###
    #
 ####
#   #
 ####
""",
"ä":"""
#   #

 ###
    #
 ####
#   #
 ####
""",
"ö":"""
#   #

 ###
#   #
#   #
#   #
 ###
""",
}

row_order = [2, 4, 5, 6, 3, 1, 0]
col_order = [0, 1, 3, 4, 2]

# default to empty symbol
fontmap = [[0] * 5 for _ in range(256)]

for char, glyph in font.items():
    pos = ord(char) if isinstance(char, str) else char
    # expand lines to 5 cols
    lines = [line.ljust(5) for line in glyph.splitlines()[1:]]
    # sanity checks
    assert sum(fontmap[pos]) == 0, f"duplicate glyph for {repr(char)}"
    assert len(lines) == 7, f"too high/low glyph for {repr(char)}"
    assert all(len(line) == 5 for line in lines), f"too wide glyph for {repr(char)}"
    # find non-spaces
    lines = [[not char.isspace() for char in line] for line in lines]
    # reorder columns
    lines = [[line[col_order[i]] for i in range(5)] for line in lines]
    # reorder lines
    lines = [lines[row_order[i]] for i in range(7)]
    # transpose
    cols = [[lines[j][i] for j in range(7)] for i in range(5)]
    # convert to ints
    cols = [sum(bit << i for i, bit in enumerate(col)) for col in cols]
    # add to map
    fontmap[pos] = cols

print('#include "module.h"')
print("#if MODULE_TYPE == MODULE_TYPE_PASSWORD")
print('#include "password_font.h"')
print("")
print("const uint8_t font[256][5] PROGMEM = {")
for glyph in fontmap:
    print("    {" + ", ".join(hex(col) for col in glyph) + "},")
print("};")
print("#endif")
